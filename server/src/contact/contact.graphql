type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

type Contact {
    id: ID!
    firstName: String!
    lastName: String!
    nickName: String
    phoneNumbers: [PhoneNumber!]!
    address: String!
    imageFile: File!
}

input FileInput {
    filename: String!
    mimetype: String!
    encoding: String!
}

input CreateContactInput {
    firstName: String!
    lastName: String!
    nickName: String
    phoneNumbers: [String!]!
    address: String!
    imageFile: FileInput!
}

input UpdateContactInput {
    firstName: String
    lastName: String
    nickName: String
    phoneNumbers: [String]
    address: String
    imageFile: FileInput
}

type PhoneNumber {
    id: ID!
    phoneNumber: String!
}

input QueryPaginationInput {
    take: Int
    skip: Int
    keyword: String
}

type Query {
    contacts (queryPaginationInput: QueryPaginationInput): [Contact!]!
    contact(id: ID!): Contact
}

type Mutation {
    createContact(createContactInput: CreateContactInput!): Contact!
    updateContact(id: ID!, updateContactInput: UpdateContactInput!): Contact!
    removeContact(id: ID!): Contact!
}